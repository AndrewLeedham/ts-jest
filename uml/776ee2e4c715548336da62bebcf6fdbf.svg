<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="130px" preserveAspectRatio="none" style="width:715px;height:130px;background:#000000;" version="1.1" viewBox="0 0 715 130" width="715px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="708" x="5" y="18.5352">[From /Users/huafu/tools/ts-jest/docs/uml/776ee2e4c715548336da62bebcf6fdbf.uml (line 59) ]</text><line style="stroke: #33FF02; stroke-width: 1.0;" x1="5" x2="713" y1="26.4883" y2="26.4883"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="164" x="5" y="45.0234">... (skipping 55 lines) ...</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="45" y="61.5117">as isolated modules</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="63" x="35" y="78">end note</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="94.4883"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="100" x="25" y="110.9766">endif (custom</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="127.4648"/><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="94" x="10" y="127.4648">Syntax Error?</text><!--
@startuml


|processor|
start

:tsJest.process(source);

if (should stringify?) then (yes)
  :json stringify;
  -> update
  source;

else (no)
endif

if (filename ends with .d.ts) then (yes)
  :wipe source;
  note right
    no need to compile
    definition files
  end note

else (no)

  |#Thistle|compiler (cached)|
  if (has type-checking?) then (yes)
    :create and cache
    ts lang service;
  else (no)
  endif

  -> source;

  if (in persistent cache?) then (yes)
    :update mem cache
    from persistent cache;

  else (no)
    if (has type checking?) then (yes)
      :compile with
      service;
      note left
        make use of the service
        created above and cached

        mem cache is used when
        reading files
      end note

    else (no)
      :compile with
      transpileModule;
      note left
        files will be compiled
        as isolated modules
      end note

    endif (custom
    transfomers)

    -> compiled source;

    :fix source maps;
    :update mem cache;
    :update persistent cache;

  endif
  |processor|

  -> update
  source;

endif

if (should use babel?) then (yes)
  :babelJest.process(source);
  note left
    calls babel-jest
    processor
  end note
  -> update
  source;

else (no)
endif

if (has afterProcess hook?) then (yes)
  :call afterProcess hook;
  -> update
  source;
  note left
    if the hook returns
    something it'll be
    used as new source
  end note

endif

:transformed source;

end


@enduml

PlantUML version 1.2018.10(Sat Aug 25 19:02:59 CEST 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_172-b11
Operating System: Mac OS X
OS Version: 10.13.6
Default Encoding: UTF-8
Language: en
Country: TH
--></g></svg>